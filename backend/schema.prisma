// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Club {
  id            String         @id @default(cuid())
  name          String         @default("")
  subscriptions Subscription[] @relation("Subscription_club")
  posts         Post[]         @relation("Post_club")
  status        String?
  slug          String         @unique @default("")
  description   String         @default("")
  about         Json           @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model Membership {
  id                   String     @id @default(cuid())
  user                 User?      @relation("Membership_user", fields: [userId], references: [id])
  userId               String?    @map("user")
  variation            Variation? @relation("Membership_variation", fields: [variationId], references: [id])
  variationId          String?    @map("variation")
  signupSessionId      String     @unique @default("")
  status               String?    @default("PENDING")
  startDate            DateTime?  @default(now())
  renewalDate          DateTime?
  stripeSubscriptionId String     @unique @default("")
  contactPreference    String?
  receiveRenewal       Boolean    @default(false)

  @@index([userId])
  @@index([variationId])
}

model Variation {
  id                  String        @id @default(cuid())
  name                String        @default("")
  subscription        Subscription? @relation("Variation_subscription", fields: [subscriptionId], references: [id])
  subscriptionId      String?       @map("subscription")
  status              String?       @default("active")
  memberships         Membership[]  @relation("Membership_variation")
  price               Int
  about               Json          @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  chargeInterval      String
  chargeIntervalCount Int
  totalCount          Int?
  stripePriceId       String        @unique @default("")

  @@index([subscriptionId])
}

model Subscription {
  id              String      @id @default(cuid())
  name            String      @default("")
  description     String      @default("")
  club            Club?       @relation("Subscription_club", fields: [clubId], references: [id])
  clubId          String?     @map("club")
  variations      Variation[] @relation("Variation_subscription")
  fromEmail       String      @default("")
  emailTemplate   String      @default("")
  slug            String      @unique @default("")
  autoRenew       Boolean     @default(false)
  about           Json        @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  stripeProductId String      @unique @default("")
  status          String?     @default("active")

  @@index([clubId])
}

model Post {
  id          String    @id @default(cuid())
  title       String    @default("")
  club        Club?     @relation("Post_club", fields: [clubId], references: [id])
  clubId      String?   @map("club")
  status      String?
  content     Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  publishDate DateTime?
  author      User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId    String?   @map("author")
  tags        Tag[]     @relation("Post_tags")

  @@index([clubId])
  @@index([authorId])
}

model Role {
  id                   String  @id @default(cuid())
  name                 String  @default("")
  canManageProducts    Boolean @default(false)
  canManageClubs       Boolean @default(false)
  canSeeOtherUsers     Boolean @default(false)
  canManageUsers       Boolean @default(false)
  canManageRoles       Boolean @default(false)
  canManageMemberships Boolean @default(false)
  canManagePosts       Boolean @default(false)
  assignedTo           User[]  @relation("User_role")
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model User {
  id               String       @id @default(cuid())
  name             String       @default("")
  email            String       @default("")
  subjectId        String       @unique @default("")
  preferredName    String       @default("")
  phone            String       @default("")
  posts            Post[]       @relation("Post_author")
  isAdmin          Boolean      @default(false)
  role             Role?        @relation("User_role", fields: [roleId], references: [id])
  roleId           String?      @map("role")
  householdMembers Json?
  stripeCustomerId String       @unique @default("")
  memberships      Membership[] @relation("Membership_user")

  @@index([email])
  @@index([roleId])
}